INCLUDE_DIRECTORIES("/home/pinglin/Software/CUDA/NVIDIA_GPU_Computing_SDK/C/common/inc")
LINK_DIRECTORIES("/home/pinglin/Software/CUDA/NVIDIA_GPU_Computing_SDK/C/lib")
# Ensure Samples can find library
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})
LINK_DIRECTORIES(${PROJECT_BINARY_DIR})

FIND_PACKAGE(FREEGLUT QUIET)
FIND_PACKAGE(CUDA QUIET)
FIND_PACKAGE(GLEW QUIET)
FIND_PACKAGE(Boost 1.40 COMPONENTS thread QUIET)

IF(FREEGLUT_FOUND AND CUDA_FOUND AND GLEW_FOUND AND Boost_FOUND)

  CUDA_INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

  SET(CUDA_NVCC_FLAGS "-O3")
  INCLUDE_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/common/inc )
  LINK_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/lib )
  LINK_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/common/lib )

  SET(CUDA_NVCC_FLAGS "-O3;-arch=sm_11;--compiler-bindir=/opt/gcc44;--verbose" )
  ADD_DEFINITIONS(-DCUDA_BUILD)

  #LINK_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/lib )
  LINK_DIRECTORIES( ${Boost_LIBRARY_DIRS} )
  INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )

  IF(CUDA_SDK_ROOT_DIR)
    ADD_DEFINITIONS(-DUSE_CUTIL)
    INCLUDE_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/common/inc )
    LINK_DIRECTORIES( ${CUDA_SDK_ROOT_DIR}/lib )
    LINK_LIBRARIES(libcutil_x86_64.a)
  ENDIF()

  CUDA_ADD_EXECUTABLE(
    VBODisplay
    main.cpp kernal.cu
  )

  TARGET_LINK_LIBRARIES(
    VBODisplay
    ${LIBRARY_NAME}
    ${GLEW_LIBRARY}
    ${Boost_LIBRARIES}
  )

ENDIF(FREEGLUT_FOUND AND CUDA_FOUND AND GLEW_FOUND AND Boost_FOUND)
